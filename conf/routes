# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

# USERS
GET    /users                       controllers.UserController.users()
GET    /user                        controllers.UserController.user()
GET    /users/:id                   controllers.UserController.show(id: Long)
POST   /user                        controllers.UserController.newUser()
DELETE /users/:id                   controllers.UserController.delete(id: Long)
POST   /users/:id                   controllers.UserController.update(id: Long)

# TEAMS
GET		/teams						controllers.TeamController.teams()
POST	/team						controllers.TeamController.newTeam()
DELETE	/teams						controllers.TeamController.delete(id: Long)
GET		/teams/:id					controllers.TeamController.show(id: Long)
POST	/teams/:id					controllers.TeamController.update(id: Long)
DELETE	/teams/:id					controllers.TeamController.delete(id: Long)
GET		/teams/:id/events			controllers.TeamController.events(id: Long)
POST	/teams/:id/events			controllers.TeamController.newEvent(id: Long)
GET		/teams/:id/members			controllers.TeamController.members(id: Long)
POST	/teams/:id/members			controllers.TeamController.addMember(id: Long)
GET		/teams/:id/events/:eventId/invites	controllers.TeamController.invites(id: Long, eventId: Long)



# EVENTS
GET		/events						controllers.EventController.events()
POST	/event						controllers.EventController.newEvent()
GET     /events/:id                 controllers.EventController.show(id: Long)
POST    /events/:id                 controllers.EventController.update(id: Long)

# LOGIN
GET     /login                      controllers.LoginController.index()
POST    /login                      controllers.LoginController.loginUser()
GET     /logout                     controllers.LoginController.logout()
GET     /currentUser                controllers.LoginController.getCurrentUser()
